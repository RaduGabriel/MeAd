@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    // ViewBag.Title = "Home Page";
    Dictionary<string, string> dic = ViewBag.api as Dictionary<string, string>;
    Dictionary<string, int> diseaseCountriesCount = ViewBag.diseaseCountriesCount as Dictionary<string, int>;

    string symptoms = ViewBag.symptoms;

}
<link rel="stylesheet" href="~/css/map/ammap.css" />
<script src="~/js/map/ammap.js"></script>
<script src="~/js/map/worldLow.js"></script>
<script src="~/js/map/black.js"></script>
<script src="~/js/map/worldmap.js"></script>

<form method="GET" accept-charset="utf-8" id="midSearchForm">
    <div class="input-group input-group-lg">


        <input id="search-form" class="form-control search-form_input" type="text" name="s" autocomplete="off" placeholder="Search..." />
        <span id="no-result" class="alert alert-danger" style="display:none;"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> No results found</span>
        <span class="search-form_liveout"></span>
        <label class="search-form_label">


        </label>
    </div>



</form>
<ul class="results-search" style="display:none;">
    <li><a href=""></a></li>
    <li><a href=""></a></li>
    <li><a href=""></a></li>
    <li><a href=""></a></li>
    <li><a href=""></a></li>
</ul>



@if (ViewBag.diseaseExists == "true")
{
    <h3 class="disease-title"><span>@dic["name"]</span><br> Speciality: @dic["speciality"]</h3>
    
    <h4 class="disease-id">Id:<span style="font-weight:normal; font-size: 17px;"> @dic["id"]</span></h4><br />

    <span class="data-info common-diseases"><strong>Abstract</strong></span><br />
    <div class="disease-block">
        <h4><span style="font-weight:normal; font-size: 17px;">@dic["abstract"]</span></h4><br />
    </div>

    <span class="data-info common-diseases"><strong>Image</strong></span><br />
    <div class="disease-block">
        <span style="font-weight:normal; font-size: 17px;"><img src="@dic["thumbnail"]"></span>
    </div><br />

    <span class="data-info common-diseases"><strong>Symptoms</strong></span><br />
    <div class="disease-block"><h4><span style="font-weight:normal; font-size: 17px;">@Html.Raw(symptoms)</span></h4></div>
    <div id="select-diseases">

        <div class="form-group">
            <label for="sel1">Select list:</label>
            <select class="form-control" id="sel1">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
            </select>
        </div>

        <div class="form-group">
            <label for="sel2">Select list:</label>
            <select class="form-control" id="sel2">
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
            </select>
        </div>

    </div>

    <div id="mapdiv" style="width: 100%; height: 600px;background-color: #222222;"></div>


}
else if (ViewBag.error == "true")
{ <h3>Something went wrong. Please try again later</h3>}
else if (ViewBag.diseaseExists == "false")
{ <h3>This disease doesn't exist. Please try another one.</h3>}



<script>

    var map = new AmCharts.AmMap();
    var minBulletSize = 3;
    var maxBulletSize = 70;
    var min = Infinity;
    var max = -Infinity;

    AmCharts.theme = AmCharts.themes.black;


    var goodData = [];


    function updateData() {
        $.ajax({
            type: "POST",
            url: '/getCountriesDisease',
            data: {
                id: "@dic["diseaseID"]",
            },
            success: function (data) {

                statistics = JSON.parse(data);
                console.log(statistics);

                UpdateMap(data);

            }
        });
    }

    function updateObesity(minim, maxim) {
        $.ajax({
        type: "POST",
        url: '/getCountriesDiseaseObesity',
        data: {
            id: "@dic["diseaseID"]",
        min: minim,
        max: maxim
    },
            success: function (data) { 
                console.log(goodData);
                UpdateMap(data);
            }
    });
    }

    function updateDensity(minim,maxim) {
        $.ajax({
            type: "POST",
            url: '/getCountriesDiseaseDensity',
            data: {
                id: "@dic["diseaseID"]",
                min: minim,
                max: maxim
        },
            success: function (data) {

                
                console.log(goodData);
                UpdateMap(data);

            }
    });
    }

    function UpdateMap(data) {
        statistics = JSON.parse(data);
        console.log(statistics);

        // get min and max values
        for (var i = 0; i < mapData.length; i++) {
            var countryName = mapData[i].name;
            var value = 0;

            $.each(statistics, function (name, val) {
                var a = countryName.toLowerCase();
                var b = name.toLowerCase();

                console.log(a);
                console.log(b);

                if (a.indexOf(b) != -1 || b.indexOf(a) != -1) {
                    found = 1;
                    value = val;
                }
            });

            if (value < min) {
                min = value;
            }
            if (value > max) {
                max = value;
            }

            mapData[i].value = value;
            goodData.push(mapData[i]);

        }

        var dataProvider = {
            mapVar: AmCharts.maps.worldLow,
            images: []
        }

        // create circle for each country

        // it's better to use circle square to show difference between values, not a radius
        var maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI;
        var minSquare = minBulletSize * minBulletSize * 2 * Math.PI;

        // create circle for each country

        for (var i = 0; i < goodData.length; i++) {
            var dataItem = goodData[i];
            var value = dataItem.value;
            // calculate size of a bubble
            var square = (value - min) / (max - min) * (maxSquare - minSquare) + minSquare;
            if (square < minSquare) {
                square = minSquare;
            }
            var size = Math.sqrt(square / (Math.PI * 2));
            var id = dataItem.code;

            dataProvider.images.push({
                type: "circle",
                width: size,
                height: size,
                color: dataItem.color,
                longitude: latlong[id].longitude,
                latitude: latlong[id].latitude,
                title: dataItem.name,
                value: value
            });
        }

        map.dataProvider = dataProvider;
        map.validateData();

    }

    AmCharts.ready(function () {

        updateObesity(0,20);

        map.addTitle("@dic["name"] in the World", 14);

        map.areasSettings = {
            unlistedAreasColor: "#FFFFFF",
            unlistedAreasAlpha: 0.1
        };
        map.imagesSettings = {
            balloonText: "<span style='font-size:14px;'><b>[[title]]</b>: [[value]]</span>",
            alpha: 0.6
        }

        var dataProvider = {
            mapVar: AmCharts.maps.worldLow,
            images: []
        }

        map.dataProvider = dataProvider;

        map.write("mapdiv");

        map.validateData();
    });

</script>


